#ifndef BASE_OS_BASEDISPLAY_H
#define BASE_OS_BASEDISPLAY_H

#include <Wire.h>
#include "SH1106Wire.h"
#include "BaseEthernet.h"
#include "BasePreferences.h"
#include "BaseWifi.h"
#include "BaseBluetooth.h"

#define PIN_SDA SDA
#define PIN_SCL SCL

class BaseDisplay {
public:
	enum State {Booting, Idle, Error, WebAuthentication, WebAuthenticationCode, DataTransfer};
	BaseDisplay(BasePreferences *basePreferences);
	void updateDisplay();
	void setEthernetStatus(BaseEthernet::Status status);
	void setWifiStatus(BaseWifi::Wifi_Status status);
	void setBluetoothStatus(BaseBluetooth::Status status);
	void setBluetoothProgress(int bytesReceived, int totalBytes);
	void setInternetProgress(int bytesSent, int totalBytes);

	void setState(State newState);
	void showError(String errorTitle, String errorStr);

private:
	SH1106Wire display;
	State state;
	BaseEthernet::Status ethernetStatus;
	BaseWifi::Wifi_Status wifiStatus;
	BaseBluetooth::Status bluetoothStatus;
	BasePreferences *basePreferences;
	bool blink = false;
	String errorTitle, errorStr;

	int bluetoothBytesReceived, bluetoothTotalBytes;
	int bluetoothETA;
	int internetBytesSent, internetTotalBytes;
	int internetETA;
};

//Icons
// 'ethernet_no_link', 16x16px
const unsigned char epd_bitmap_ethernet_no_link [] PROGMEM = {
		0xfe, 0x7f, 0x03, 0xc0, 0x01, 0x80, 0xfd, 0xbf, 0x05, 0xa0, 0x55, 0xaa, 0x55, 0xaa, 0x05, 0xa0,
		0x05, 0xa0, 0x19, 0x98, 0x11, 0x88, 0x31, 0x8c, 0xe1, 0x87, 0x01, 0x80, 0x03, 0xc0, 0xfe, 0x7f
};
// 'ethernet_connect', 16x16px
const unsigned char epd_bitmap_ethernet_connect [] PROGMEM = {
		0xe0, 0x07, 0x20, 0x04, 0x20, 0x04, 0x20, 0x04, 0x20, 0x04, 0xe0, 0x07, 0x80, 0x01, 0xff, 0xff,
		0xff, 0xff, 0x0c, 0x30, 0x3f, 0xfc, 0x21, 0x84, 0x21, 0x84, 0x21, 0x84, 0x21, 0x84, 0x3f, 0xfc
};
// 'warning', 16x16px
const unsigned char epd_bitmap_warning [] PROGMEM = {
		0x00, 0x00, 0x80, 0x01, 0xc0, 0x03, 0x60, 0x06, 0x30, 0x0c, 0x10, 0x08, 0x98, 0x19, 0x88, 0x11,
		0x8c, 0x31, 0x84, 0x21, 0x06, 0x60, 0x83, 0xc1, 0x03, 0xc0, 0x06, 0x60, 0xfc, 0x3f, 0x00, 0x00
};
// 'wifi_access_point', 16x16px
const unsigned char epd_bitmap_wifi_access_point [] PROGMEM = {
		0x06, 0x20, 0x02, 0x60, 0x1b, 0x48, 0xcb, 0xdb, 0xe9, 0x93, 0xe9, 0x97, 0xc9, 0x93, 0xdb, 0xdb,
		0x93, 0x49, 0x86, 0x61, 0x84, 0x21, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01, 0x80, 0x01};

// 'wifi', 16x16px
const unsigned char epd_bitmap_wifi [] PROGMEM = {
		0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0xf8, 0x1f, 0x7e, 0x7e, 0x8f, 0xf1, 0xf3, 0x4f, 0xfc, 0x1f,
		0x18, 0x18, 0xe0, 0x07, 0xe0, 0x07, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// 'bluetooth', 16x16px
const unsigned char epd_bitmap_bluetooth [] PROGMEM = {
		0x00, 0x00, 0x80, 0x00, 0xc0, 0x00, 0xa0, 0x08, 0x90, 0x0c, 0xb0, 0x06, 0xe0, 0x03, 0xc0, 0x01,
		0xc0, 0x01, 0xe0, 0x03, 0xb0, 0x06, 0x90, 0x0c, 0xa0, 0x08, 0xc0, 0x00, 0x80, 0x00, 0x00, 0x00
};


#endif //BASE_OS_BASEDISPLAY_H
